import{$ as g,a as w}from"./D6ATwwEs.js";import{aG as E,ai as u}from"./Dzi8umfP.js";import{u as i}from"./BsYNtWxF.js";async function y(t){let r=await(await fetch(t)).blob();return new Promise((o,a)=>{let n=new FileReader;n.addEventListener("load",function(){o(n.result)},!1),n.onerror=()=>a(this),n.readAsDataURL(r)})}var p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",d=typeof Uint8Array>"u"?[]:new Uint8Array(256);for(var c=0;c<p.length;c++)d[p.charCodeAt(c)]=c;var A=function(t){var e=t.length*.75,r=t.length,o,a=0,n,s,f,l;t[t.length-1]==="="&&(e--,t[t.length-2]==="="&&e--);var m=new ArrayBuffer(e),h=new Uint8Array(m);for(o=0;o<r;o+=4)n=d[t.charCodeAt(o)],s=d[t.charCodeAt(o+1)],f=d[t.charCodeAt(o+2)],l=d[t.charCodeAt(o+3)],h[a++]=n<<2|s>>4,h[a++]=(s&15)<<4|f>>2,h[a++]=(f&3)<<6|l&63;return m};const k=E("animals",{state:()=>({animals:[],loading:!1,error:null}),getters:{animalByName:t=>e=>t.animals.find(r=>r.name.toLowerCase()===e.toLowerCase())},actions:{async getAvatar(t){if(t.avatar){const e=i(),{data:r,error:o}=await e.storage.from("avatars").createSignedUrl(t.avatar,3600,{transform:{width:100,height:100}});if(r)return r.signedUrl}},async fetchAnimals(){try{this.loading=!0,this.error=null;const t=i(),e=u().value;if(!e||!e.id)return this.error="User not authenticated",null;const{data:r,error:o}=await t.from("animal").select(`
            id, name, type, birthDate, gender, weight, mealQuantity, avatar,
            weightHistory (id, animalId, weight, date),
            fleaProtection (animalId, start, end),
            wormProtection (animalId, start, end),
            food (id, animalId, type, brand, weight, state, openDate)
          `).eq("userId",e.id);if(o)return console.error("Supabase error:",o),this.error=o.message,null;this.animals=r||[];for(const a of this.animals)a.avatarDisplay=await this.getAvatar(a);return this.animals}catch(t){return console.error("Error fetching animals:",t),this.error=t instanceof Error?t.message:"Unknown error",null}finally{this.loading=!1}},getAnimal(t){const e=this.animals.find(r=>r.name.toLowerCase()===t.toLowerCase());if(!e)throw new Error("No animal found");return e},getAnimalById(t){const e=this.animals.find(r=>r.id===t);if(!e)throw new Error("No animal found for id "+t);return e},async addAnimal(t,e){try{this.loading=!0,this.error=null;const r=i(),o=u().value;if(!o||!o.id)return this.error="User not authenticated",console.error(this.error),null;let a,n;if(e.file?n=e.file:e.fileURL&&(n=A(await y(e.fileURL))),n){const{data:l}=await r.storage.from("avatars").upload(`${o.id}/${t.name.toLowerCase()}_${new Date().getTime()}`,n,{cacheControl:"3600",upsert:!1});l&&(a=l.path)}const{data:s,error:f}=await r.from("animal").insert({userId:o.id,name:t.name,birthDate:t.birthDate,gender:t.gender,type:t.type,weight:t.weight,mealQuantity:t.mealQuantity,avatar:a}).select().single();if(f)return console.error("Error adding animal:",f),this.error=f.message,null;if(s&&t.weight){const{error:l}=await r.from("weightHistory").insert({animalId:s.id,weight:t.weight,date:g(w()).toString()});l&&console.error("Error adding weight history:",l)}return await this.fetchAnimals(),s}catch(r){return console.error("Error in addAnimal:",r),this.error=r instanceof Error?r.message:"Unknown error",null}finally{this.loading=!1}},async updateAnimal(t,e){try{this.loading=!0,this.error=null;const r=i(),{error:o}=await r.from("animal").update(e).eq("id",t);return o?(console.error("Error updating animal:",o),this.error=o.message,!1):(await this.fetchAnimals(),this.getAnimalById(t))}catch(r){return console.error("Error in updateAnimal:",r),this.error=r instanceof Error?r.message:"Unknown error",!1}finally{this.loading=!1}},async removeAnimal(t){try{this.loading=!0,this.error=null;const e=i(),{error:r}=await e.from("animal").delete().eq("id",t);if(r)return console.error("Error removing animal:",r),this.error=r.message,!1;const o=this.animals.findIndex(a=>a.id===t);return o>=0&&this.animals.splice(o,1),!0}catch(e){return console.error("Error in removeAnimal:",e),this.error=e instanceof Error?e.message:"Unknown error",!1}finally{this.loading=!1}},async updateAnimalAvatar(t,e){try{this.loading=!0,this.error=null;const r=i(),o=u().value;if(!o||!o.id)return this.error="User not authenticated",console.error(this.error),null;let a;if(e.file?a=e.file:e.fileURL&&(a=A(await y(e.fileURL))),a){const n=t.avatar||`${o.id}/${t.name.toLowerCase()}_${new Date().getTime()}`,{data:s}=await r.storage.from("avatars").upload(n,a,{cacheControl:"3600",upsert:!0});if(s){const{data:f,error:l}=await r.from("animal").update({avatar:s.path}).eq("id",t.id).select().single();return l?(console.error("Error updating avatar :",l),this.error=l.message,null):(await this.fetchAnimals(),this.getAnimalById(f.id))}}return t}catch(r){return console.error("Error in updateAnimalAvatar:",r),this.error=r instanceof Error?r.message:"Unknown error",null}finally{this.loading=!1}},async addWeightHistory(t,e){try{this.loading=!0,this.error=null;const r=i(),{error:o}=await r.from("weightHistory").insert({animalId:t,...e});return o?(console.error("Error adding weight to animal:",o),this.error=o.message,!1):(await this.updateAnimal(t,{weight:e.weight}),await this.fetchAnimals(),this.getAnimalById(t))}catch(r){return console.error("Error in add weight history:",r),this.error=r instanceof Error?r.message:"Unknown error",!1}finally{this.loading=!1}},async updateFleaProtection(t){try{this.loading=!0,this.error=null;const e=i(),{error:r}=await e.from("fleaProtection").upsert(t,{onConflict:"animalId"});return r?(console.error("Error adding flea protection to animal:",r),this.error=r.message,!1):(await this.fetchAnimals(),this.getAnimalById(t.animalId))}catch(e){return console.error("Error in add flea protection :",e),this.error=e instanceof Error?e.message:"Unknown error",!1}finally{this.loading=!1}},async updateWormProtection(t){try{this.loading=!0,this.error=null;const e=i(),{error:r}=await e.from("wormProtection").upsert(t,{onConflict:"animalId"});return r?(console.error("Error adding worm protection to animal:",r),this.error=r.message,!1):(await this.fetchAnimals(),this.getAnimalById(t.animalId))}catch(e){return console.error("Error in add worm protection:",e),this.error=e instanceof Error?e.message:"Unknown error",!1}finally{this.loading=!1}},async addFood(t){try{this.loading=!0,this.error=null;const e=i(),{error:r}=await e.from("food").insert(t);return r?(console.error("Error adding food to animal:",r),this.error=r.message,!1):(await this.fetchAnimals(),this.getAnimalById(t.animalId))}catch(e){return console.error("Error in add food:",e),this.error=e instanceof Error?e.message:"Unknown error",!1}finally{this.loading=!1}},async openFood(t){try{this.loading=!0,this.error=null;const e=this.getAnimalById(t);let r;if(e.food){for(const n of e.food)if(n.state==="stock"){r={...n},r.openDate=g(w()).toString(),r.state="open";break}if(!r)return this.error="No food in stock",this.loading=!1,!1;const o=i(),{error:a}=await o.from("food").update(r).eq("id",r.id);if(a)return console.error("Error opening food :",a),this.error=a.message,!1;await this.fetchAnimals()}return this.getAnimalById(t)}catch(e){return console.error("Error in open food :",e),this.error=e instanceof Error?e.message:"Unknown error",!1}finally{this.loading=!1}},async updateFoodOpenDate(t,e){try{this.loading=!0,this.error=null;const r=this.getAnimalById(t);let o;if(r.food){if(o=r.food.find(s=>s.state==="open"),!o)return this.error="No food open",this.loading=!1,!1;const a=i(),{error:n}=await a.from("food").update({openDate:e.toString()}).eq("id",o.id);if(n)return console.error("Error while updating food open date :",n),this.error=n.message,!1;await this.fetchAnimals()}return this.getAnimalById(t)}catch(r){return console.error("Error in finish food :",r),this.error=r instanceof Error?r.message:"Unknown error",!1}finally{this.loading=!1}},async finishFood(t){try{this.loading=!0,this.error=null;const e=this.getAnimalById(t);let r;if(e.food){if(r=e.food.find(n=>n.state==="open"),!r)return this.error="No food open",this.loading=!1,!1;r.state="empty";const o=i(),{error:a}=await o.from("food").update(r).eq("id",r.id);if(a)return console.error("Error finishing food :",a),this.error=a.message,!1;await this.fetchAnimals()}return this.getAnimalById(t)}catch(e){return console.error("Error in finish food :",e),this.error=e instanceof Error?e.message:"Unknown error",!1}finally{this.loading=!1}}}});export{k as u};
